{
    "openapi": "3.0.1",
    "info": {
        "title": "SOCaaS - MSS Portal - AutoGen",
        "version": "v1"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "security": [
        {
            "X-Lestrade-Key-ID": []
        },
        {
            "X-Lestrade-Key": []
        }
    ],
    "paths": {
        "/v1/webhooks/{id}": {
            "put": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Update a webhook",
                "operationId": "putWebhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Delete a webhook",
                "operationId": "deleteWebhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/threats/{id}": {
            "get": {
                "tags": [
                    "threats"
                ],
                "summary": "Find a threat",
                "operationId": "findThreat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThreatInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "threats"
                ],
                "summary": "Update a threat",
                "operationId": "updateThreat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThreatUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "threats"
                ],
                "summary": "Delete a threat",
                "operationId": "deleteThreat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/threats/comments/{id}": {
            "put": {
                "tags": [
                    "threats"
                ],
                "summary": "Update a threat's comment",
                "operationId": "updateThreatComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThreatCommentUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/{id}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Find a task",
                "operationId": "findTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "tasks"
                ],
                "summary": "Update a task",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tasks"
                ],
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/{id}/acknowledgement": {
            "put": {
                "tags": [
                    "tasks"
                ],
                "summary": "Acknowledge a task",
                "operationId": "acknowledgeTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/comments/{id}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Find a task comment",
                "operationId": "findTaskComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskCommentInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "tasks"
                ],
                "summary": "Update a task comment",
                "operationId": "updateCommentOnTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskCommentInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/comments/{id}/read-flag": {
            "put": {
                "tags": [
                    "tasks"
                ],
                "summary": "Update task comment read/unread flag",
                "operationId": "updateReadFlagForCommentOnTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "boolean"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/comments/{id}/acknowledgement": {
            "put": {
                "tags": [
                    "tasks"
                ],
                "summary": "Acknowledge a task comment",
                "operationId": "acknowledgeCommentOnTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/playbooks/{id}": {
            "get": {
                "tags": [
                    "playbooks"
                ],
                "summary": "Find a playbook",
                "operationId": "findPlaybook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaybookInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "playbooks"
                ],
                "summary": "Update a playbook",
                "operationId": "updatePlaybook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaybookUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "playbooks"
                ],
                "operationId": "deletePlaybook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/playbooks/tasks/{id}": {
            "get": {
                "tags": [
                    "playbooks"
                ],
                "summary": "Find a playbook task",
                "operationId": "findPlaybookTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaybookTaskInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "playbooks"
                ],
                "summary": "Update a playbook task",
                "operationId": "updatePlaybookTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaybookTaskUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "playbooks"
                ],
                "summary": "Delete a playbook task",
                "operationId": "deletePlaybookTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/identities/{id}": {
            "put": {
                "tags": [
                    "identities"
                ],
                "summary": "Update an identity",
                "operationId": "putIdentity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IdentityUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "identities"
                ],
                "summary": "Delete an identity",
                "operationId": "deleteIdentity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/identities/current/key": {
            "put": {
                "tags": [
                    "identities"
                ],
                "summary": "Update the key of the current (authenticated) identity",
                "operationId": "putCurrentKey",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/customers/{id}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Find a customer",
                "operationId": "getCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "customers"
                ],
                "summary": "Update a customer",
                "operationId": "putCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customers"
                ],
                "summary": "Delete a customer",
                "operationId": "deleteCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Find a case",
                "operationId": "findCase",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "cases"
                ],
                "summary": "Update a case",
                "operationId": "updateCase",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/resolution": {
            "put": {
                "tags": [
                    "cases"
                ],
                "summary": "Resolve a case",
                "operationId": "resolveCase",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseResolution"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/linked-threats/{threatId}": {
            "put": {
                "tags": [
                    "cases"
                ],
                "summary": "Add a threat link",
                "operationId": "addLinkedThreat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "threatId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "cases"
                ],
                "summary": "Remove a threat link",
                "operationId": "removeLinkedThreat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "threatId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/linked-cases": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Find the linked cases of a Case",
                "operationId": "findLinkedCases",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LinkedCase"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "cases"
                ],
                "summary": "Add linked cases to the case",
                "operationId": "addLinkedCases",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/incident": {
            "put": {
                "tags": [
                    "cases"
                ],
                "summary": "Confirm Case Incident",
                "operationId": "confirmCaseIncident",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/acknowledgement": {
            "put": {
                "tags": [
                    "cases"
                ],
                "summary": "Acknowledge alerts in a case",
                "operationId": "acknowledgeCase",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/comments/{id}": {
            "put": {
                "tags": [
                    "cases"
                ],
                "summary": "Update a case comment",
                "operationId": "updateCommentOnTask_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseCommentInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/webhooks": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Find webhooks",
                "operationId": "getWebhooks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WebhookInfo"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Create a new webhook",
                "operationId": "createWebhook",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/threats": {
            "get": {
                "tags": [
                    "threats"
                ],
                "summary": "Find threats",
                "operationId": "findThreats",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "caseId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "createdAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "createdAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageThreatInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "threats"
                ],
                "summary": "Create a threat",
                "operationId": "createThreat",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThreatCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThreatInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/threats/{id}/comments": {
            "post": {
                "tags": [
                    "threats"
                ],
                "summary": "Add a comment to a threat",
                "operationId": "addThreatComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThreatCommentCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/threats/{id}/attachments": {
            "get": {
                "tags": [
                    "threats"
                ],
                "summary": "Find all threat's attachment",
                "operationId": "findThreatAttachments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseAttachmentInfo"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "threats"
                ],
                "summary": "Upload an attachment to a threat",
                "operationId": "uploadThreatAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Find tasks",
                "operationId": "findTasks",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "caseId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "accountable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TELUS",
                                "Customer"
                            ]
                        }
                    },
                    {
                        "name": "phase",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CONTAIN",
                                "INVESTIGATE",
                                "ERADICATE",
                                "LESSONS_LEARNED"
                            ]
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low",
                                "very_low"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "in_progress",
                                "close"
                            ]
                        }
                    },
                    {
                        "name": "telusPrime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "createdAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "createdAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "dueDate",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "caseTitle",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resolvedAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "resolvedAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "resolvedBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTaskInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "tasks"
                ],
                "summary": "Create a task",
                "operationId": "createTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/{id}/comments": {
            "post": {
                "tags": [
                    "tasks"
                ],
                "summary": "Create a task comment",
                "operationId": "createCommentOnTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskCommentCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/{id}/attachments": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Find all task's attachment",
                "operationId": "findTaskAttachments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseAttachmentInfo"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "tasks"
                ],
                "summary": "Upload an attachment to a task",
                "operationId": "uploadTaskAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/from-playbook": {
            "post": {
                "tags": [
                    "tasks"
                ],
                "summary": "Activate playbook",
                "operationId": "activatePlaybook",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivatePlaybookRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/playbooks": {
            "get": {
                "tags": [
                    "playbooks"
                ],
                "summary": "Find playbooks",
                "operationId": "findPlaybooks",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "createdAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "createdAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "updatedAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "updatedAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlaybookInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "playbooks"
                ],
                "summary": "Create a playbook",
                "operationId": "createPlaybook",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaybookCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaybookInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/playbooks/{playbookId}/tasks": {
            "get": {
                "tags": [
                    "playbooks"
                ],
                "summary": "Find playbook tasks",
                "operationId": "findPlaybookTasks",
                "parameters": [
                    {
                        "name": "playbookId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "playbookTaskCriteria",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PlaybookTaskCriteria"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlaybookTaskInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "playbooks"
                ],
                "summary": "Create a playbook task",
                "operationId": "createPlaybookTask",
                "parameters": [
                    {
                        "name": "playbookId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaybookTaskCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaybookTaskInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/identities": {
            "get": {
                "tags": [
                    "identities"
                ],
                "summary": "Find identities",
                "operationId": "getIdentities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IdentityInfo"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "identities"
                ],
                "summary": "Create a new identity",
                "operationId": "createIdentity",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IdentityCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/customers": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Find customer",
                "operationId": "findCustomers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerInfo"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "customers"
                ],
                "summary": "Create a new customer",
                "operationId": "createCustomer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Find cases",
                "operationId": "findCases",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "serviceComponent",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SOC",
                                "Threat_hunting"
                            ]
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low",
                                "very_low"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "in_progress",
                                "close"
                            ]
                        }
                    },
                    {
                        "name": "telusPrime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "incident",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "createdAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "createdAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "alertId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "caseSource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resolvedAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "resolvedAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "resolvedBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "threatId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCaseInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "cases"
                ],
                "summary": "Create a case",
                "operationId": "createCase",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/playbooks/{playbookId}": {
            "post": {
                "tags": [
                    "cases"
                ],
                "summary": "Activate playbook",
                "operationId": "activatePlaybook_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "playbookId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/comments": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Find the comments of a Case",
                "operationId": "findComments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CaseCommentInfo"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "cases"
                ],
                "summary": "Create a case comment",
                "operationId": "createCommentOnCase",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseCommentCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/attachments": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Find all case's attachment",
                "operationId": "findCaseAttachments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseAttachmentInfo"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "cases"
                ],
                "summary": "Upload an attachment to a case",
                "operationId": "uploadCaseAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/alerts": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "summary": "Find alerts",
                "operationId": "findAlerts_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low",
                                "very_low"
                            ]
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "sourceCreatedAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "sourceCreatedAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "sourceModifiedAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "sourceModifiedAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "investigationCaseId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAlertInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "alerts"
                ],
                "summary": "Create an alert",
                "operationId": "createAlert",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AlertCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/threats/{id}/attachments/{name}": {
            "get": {
                "tags": [
                    "threats"
                ],
                "summary": "Download an threat's attachment",
                "operationId": "downloadThreatAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forceDownload",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/threats/attachments/{id}": {
            "get": {
                "tags": [
                    "threats"
                ],
                "summary": "Find a threat's attachment",
                "operationId": "findThreatAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseAttachmentInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "threats"
                ],
                "summary": "delete a threat's attachment",
                "operationId": "removeThreatAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/{id}/attachments/{name}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Download an task's attachment",
                "operationId": "downloadTaskAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forceDownload",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/count": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Find count given the search criterias",
                "operationId": "findTaskCount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "caseId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "accountable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TELUS",
                                "Customer"
                            ]
                        }
                    },
                    {
                        "name": "phase",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CONTAIN",
                                "INVESTIGATE",
                                "ERADICATE",
                                "LESSONS_LEARNED"
                            ]
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low",
                                "very_low"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "in_progress",
                                "close"
                            ]
                        }
                    },
                    {
                        "name": "telusPrime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "createdAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "createdAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "dueDate",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 123
                    },
                    {
                        "name": "caseTitle",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resolvedAt.from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "resolvedAt.to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "resolvedBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/comments/countUnread": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Find count of unread comments by caseId and accountable",
                "operationId": "findCountOfUnreadCommentsByCaseIdAndAccountable",
                "parameters": [
                    {
                        "name": "caseId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "accountable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks/attachments/{id}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Find a task's attachment",
                "operationId": "findTaskAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseAttachmentInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tasks"
                ],
                "summary": "delete a task's attachment",
                "operationId": "removeTaskAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/identities/current": {
            "get": {
                "tags": [
                    "identities"
                ],
                "summary": "Get current (authenticated) identity",
                "operationId": "getCurrent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/linked-threats": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Find the linked threats of a Case",
                "operationId": "findLinkedThreats",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ThreatInfo"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/attachments/{name}": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Download an case's attachment",
                "operationId": "downloadCaseAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forceDownload",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/alerts": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Find the alerts of a Case",
                "operationId": "findAlerts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlertInfo"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/sources": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Get all the sources of the matching cases",
                "operationId": "findCaseSourcesByCustomerId",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/service-metrics": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Get the service metrics of the matching cases",
                "operationId": "getServiceMetrics",
                "parameters": [
                    {
                        "name": "caseCriteria",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/CaseCriteria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseServiceMetrics"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/attachments/{id}": {
            "get": {
                "tags": [
                    "cases"
                ],
                "summary": "Find a case's attachment",
                "operationId": "findCaseAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseAttachmentInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "cases"
                ],
                "summary": "Delete a case's attachment",
                "operationId": "removeCaseAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/alerts/{id}": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "summary": "Find a alert",
                "operationId": "findAlert",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cases/{id}/linked-cases/{linkedCaseId}": {
            "delete": {
                "tags": [
                    "cases"
                ],
                "summary": "Add a linked case to the case",
                "operationId": "removeLinkedCase",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "linkedCaseId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Remaining": {
                                "description": "Remaining requests",
                                "schema": {
                                    "type": "long"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access Denied"
                    },
                    "429": {
                        "description": "API Request Quota Exhausted",
                        "headers": {
                            "X-Lestrade-Rate-Limit-Retry-After-Seconds": {
                                "description": "Retry after (seconds)",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "WebhookUpdate": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The webhook URL"
                    },
                    "authenticationHeaderName": {
                        "type": "string",
                        "description": "The name of the authentication header"
                    },
                    "authenticationHeaderValue": {
                        "type": "string",
                        "description": "The value of the authentication header"
                    },
                    "eventTypes": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The non empty list of type of events the webhook is registered",
                        "items": {
                            "type": "string",
                            "description": "The non empty list of type of events the webhook is registered",
                            "enum": [
                                "ALERT_ACKNOWLEDGED",
                                "ALERT_CREATED",
                                "CASE_CREATED",
                                "CASE_PROMOTED_AS_INCIDENT",
                                "CASE_COMMENT_ADD",
                                "CASE_THREAT_ADD",
                                "CASE_THREAT_REMOVE",
                                "CASE_PURGED",
                                "TASK_ABOUT_TO_EXPIRE",
                                "TASK_COMMENT_ADD",
                                "TASK_CREATED",
                                "TASK_EXPIRED",
                                "TASK_UPDATED",
                                "TASK_ASSIGNED"
                            ]
                        }
                    }
                },
                "description": "A webhook update"
            },
            "ThreatUpdate": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the threat"
                    },
                    "actor": {
                        "type": "string",
                        "description": "The actor of the threat"
                    },
                    "detailHtml": {
                        "type": "string",
                        "description": "The detail HTML of the threat"
                    }
                },
                "description": "A threat update"
            },
            "ThreatCommentUpdate": {
                "type": "object",
                "properties": {
                    "commentTextHtml": {
                        "type": "string",
                        "description": "The text of the comment",
                        "example": "<p>This is a comment</p>"
                    }
                },
                "description": "A comment update"
            },
            "TaskUpdate": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the task",
                        "example": "PENDING"
                    },
                    "telusPrime": {
                        "type": "string",
                        "description": "The Telus user accountable for the task",
                        "example": "https://mssportal.telus.com/api/users/1"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the task",
                        "example": "This is a task name"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the task",
                        "example": "This is a task description"
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the task",
                        "example": "LOW"
                    },
                    "modifiedByTelus": {
                        "type": "boolean",
                        "description": "Should customer be notified when TELUS updates task",
                        "example": false
                    },
                    "dueDate": {
                        "type": "string",
                        "description": "The due date of the task",
                        "format": "date",
                        "example": "2020-09-21"
                    }
                },
                "description": "A task update"
            },
            "TaskCommentInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The identifiant",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The principal who created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last modification time",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The principal who last modifed"
                    },
                    "commentTextHtml": {
                        "type": "string",
                        "description": "The text of the comment"
                    },
                    "authorship": {
                        "type": "string",
                        "description": "The Telus user accountable for the task",
                        "example": "TELUS"
                    },
                    "acknowledged": {
                        "type": "boolean",
                        "description": "indicates if the task comment has been acknowledged",
                        "example": true
                    },
                    "acknowledgedAt": {
                        "type": "string",
                        "description": "The time of the acknowledgement of the task comment",
                        "format": "date-time"
                    },
                    "acknowledgedBy": {
                        "type": "string",
                        "description": "The user who acknowledged the task comment"
                    },
                    "readAt": {
                        "type": "string",
                        "description": "The time the task comment was read; null if not read",
                        "format": "date-time"
                    }
                },
                "description": "A task comment"
            },
            "PlaybookUpdate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the playbook",
                        "example": "Playbook name"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the playbook",
                        "example": "Playbook description"
                    }
                },
                "description": "A playbook update"
            },
            "PlaybookTaskUpdate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the playbook task",
                        "example": "Playbook task name"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the playbook task",
                        "example": "Playbook task description"
                    },
                    "accountable": {
                        "type": "string",
                        "description": "The type of user accountable for the playbook task",
                        "example": "CUSTOMER",
                        "enum": [
                            "TELUS",
                            "CUSTOMER"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the playbook task",
                        "example": "CRITICAL"
                    },
                    "phase": {
                        "type": "string",
                        "description": "The phase of the playbook task",
                        "example": "INVESTIGATION",
                        "enum": [
                            "INVESTIGATE",
                            "CONTAIN",
                            "ERADICATE",
                            "LESSONS_LEARNED"
                        ]
                    },
                    "dueDatePeriod": {
                        "type": "integer",
                        "description": "The due date of the playbook task in days",
                        "format": "int32"
                    }
                },
                "description": "A playbook task update"
            },
            "IdentityUpdate": {
                "type": "object",
                "properties": {
                    "grantedBehalfUserPattern": {
                        "type": "string",
                        "description": "The user pattern the identity can act on behalf of",
                        "example": "https://mssportal.telus.com/api/users/.*"
                    },
                    "rateLimitConfiguration": {
                        "type": "string",
                        "description": "The rate limit configuration (capacity, refill, refill period)",
                        "example": "120,60,PT1M"
                    },
                    "permissions": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The identity permissions",
                        "items": {
                            "type": "string",
                            "description": "The identity permissions"
                        }
                    }
                },
                "description": "An identity update"
            },
            "CustomerUpdate": {
                "type": "object",
                "properties": {
                    "caseRetentionPeriodMonths": {
                        "type": "integer",
                        "description": "The case retention period (in months)",
                        "format": "int32"
                    }
                },
                "description": "A customer update"
            },
            "CaseUpdate": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the case",
                        "example": "PENDING"
                    },
                    "telusPrime": {
                        "type": "string",
                        "description": "The Telus user accountable for the case",
                        "example": "https://mssportal.telus.com/api/users/1"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the case",
                        "example": "This is a case description"
                    },
                    "caseTitle": {
                        "type": "string",
                        "description": "The caseTitle of the case",
                        "example": "This is a case title"
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the case",
                        "example": "HIGH"
                    },
                    "resolutionNotes": {
                        "type": "string",
                        "description": "The resolution notes of the case",
                        "example": "This is a resolution notes"
                    }
                },
                "description": "A case update"
            },
            "CaseResolution": {
                "type": "object",
                "properties": {
                    "resolutionNotes": {
                        "type": "string",
                        "description": "The resolution notes of the case"
                    }
                },
                "description": "A case resolution"
            },
            "CaseCommentInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The identifiant",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The principal who created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last modification time",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The principal who last modifed"
                    },
                    "commentTextHtml": {
                        "type": "string",
                        "description": "The text of the comment"
                    }
                },
                "description": "A case comment"
            },
            "WebhookCreation": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The webhook URL"
                    },
                    "authenticationHeaderName": {
                        "type": "string",
                        "description": "The name of the authentication header"
                    },
                    "authenticationHeaderValue": {
                        "type": "string",
                        "description": "The value of the authentication header"
                    },
                    "eventTypes": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The non empty list of type of events the webhook is registered",
                        "items": {
                            "type": "string",
                            "description": "The non empty list of type of events the webhook is registered",
                            "enum": [
                                "ALERT_ACKNOWLEDGED",
                                "ALERT_CREATED",
                                "CASE_CREATED",
                                "CASE_PROMOTED_AS_INCIDENT",
                                "CASE_COMMENT_ADD",
                                "CASE_THREAT_ADD",
                                "CASE_THREAT_REMOVE",
                                "CASE_PURGED",
                                "TASK_ABOUT_TO_EXPIRE",
                                "TASK_COMMENT_ADD",
                                "TASK_CREATED",
                                "TASK_EXPIRED",
                                "TASK_UPDATED",
                                "TASK_ASSIGNED"
                            ]
                        }
                    }
                },
                "description": "A webhook creation"
            },
            "WebhookInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The webhook ID",
                        "format": "int32"
                    },
                    "url": {
                        "type": "string",
                        "description": "The webhook URL"
                    },
                    "eventTypes": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The non empty list of type of events the webhook is registered",
                        "items": {
                            "type": "string",
                            "description": "The non empty list of type of events the webhook is registered",
                            "enum": [
                                "ALERT_ACKNOWLEDGED",
                                "ALERT_CREATED",
                                "CASE_CREATED",
                                "CASE_PROMOTED_AS_INCIDENT",
                                "CASE_COMMENT_ADD",
                                "CASE_THREAT_ADD",
                                "CASE_THREAT_REMOVE",
                                "CASE_PURGED",
                                "TASK_ABOUT_TO_EXPIRE",
                                "TASK_COMMENT_ADD",
                                "TASK_CREATED",
                                "TASK_EXPIRED",
                                "TASK_UPDATED",
                                "TASK_ASSIGNED"
                            ]
                        }
                    }
                },
                "description": "A webhook"
            },
            "ThreatCreation": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the threat"
                    },
                    "actor": {
                        "type": "string",
                        "description": "The actor of the threat"
                    },
                    "detailHtml": {
                        "type": "string",
                        "description": "The detail HTML of the threat"
                    }
                },
                "description": "A threat creation"
            },
            "ThreatCommentInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The identifiant",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The principal who created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last modification time",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The principal who last modifed"
                    },
                    "commentTextHtml": {
                        "type": "string",
                        "description": "The text of the comment"
                    }
                },
                "description": "A threat comment"
            },
            "ThreatInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The identifiant",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The principal who created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last modification time",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The principal who last modifed"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the threat"
                    },
                    "actor": {
                        "type": "string",
                        "description": "The actor of the threat"
                    },
                    "detailHtml": {
                        "type": "string",
                        "description": "The detail HTML of the threat"
                    },
                    "comments": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The comments of the threat",
                        "items": {
                            "$ref": "#/components/schemas/ThreatCommentInfo"
                        }
                    }
                },
                "description": "A threat"
            },
            "ThreatCommentCreation": {
                "type": "object",
                "properties": {
                    "commentTextHtml": {
                        "type": "string",
                        "description": "The text of the comment",
                        "example": "<p>This is a comment</p>"
                    }
                },
                "description": "A comment creation"
            },
            "TaskCreation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the task",
                        "example": "Task"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the task",
                        "example": "AbnormalInboundVolume"
                    },
                    "caseId": {
                        "type": "integer",
                        "description": "The id of the case",
                        "format": "int32",
                        "example": 321
                    },
                    "accountable": {
                        "type": "string",
                        "description": "The Telus user accountable for the task",
                        "example": "TELUS"
                    },
                    "telusPrime": {
                        "type": "string",
                        "description": "The Telus user accountable for the case",
                        "example": "https://mssportal.telus.com/api/users/1"
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the task",
                        "example": "HIGH"
                    },
                    "phase": {
                        "type": "string",
                        "description": "The phase of the task",
                        "example": "INVESTIGATE"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the task",
                        "example": "PENDING"
                    },
                    "dueDate": {
                        "type": "string",
                        "description": "The due date of the task",
                        "format": "date",
                        "example": "2020-07-21"
                    },
                    "aboutToExpireThresholdInDays": {
                        "type": "integer",
                        "description": "The threshold in days at which to notify that a task is about to expire (1, 2 or 3)",
                        "format": "int32",
                        "example": 3
                    },
                    "modifiedByTelus": {
                        "type": "boolean",
                        "description": "Should customer be notified when TELUS updates task",
                        "example": false
                    }
                },
                "description": "A task creation"
            },
            "TaskInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The identifiant of the task",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the task is",
                        "example": "Task"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the task",
                        "example": "AbnormalInboundVolume"
                    },
                    "caseId": {
                        "type": "integer",
                        "description": "The identifiant of the related case",
                        "format": "int32",
                        "example": 1
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "The identifiant of the related customer",
                        "format": "int32",
                        "example": 1
                    },
                    "accountable": {
                        "type": "string",
                        "description": "The accountable of service for the task",
                        "example": "TELUS"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the task",
                        "example": "PENDING"
                    },
                    "acknowledged": {
                        "type": "boolean",
                        "description": "indicates if the task has been acknowledged",
                        "example": true
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the task",
                        "example": "HIGH"
                    },
                    "phase": {
                        "type": "string",
                        "description": "The phase of the task",
                        "example": "HIGH"
                    },
                    "telusPrime": {
                        "type": "string",
                        "description": "The Telus user accountable for the task",
                        "example": "https://mssportal.telus.com/api/users/1"
                    },
                    "dueDate": {
                        "type": "string",
                        "description": "The due date of the task",
                        "format": "date",
                        "example": "2020-09-21"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the task",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The creator of the task"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The updated time of the task",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last user to have updated the task"
                    },
                    "acknowledgedAt": {
                        "type": "string",
                        "description": "The acknowledged time of the task",
                        "format": "date-time"
                    },
                    "acknowledgedBy": {
                        "type": "string",
                        "description": "The acknowledged by of the task"
                    },
                    "caseTitle": {
                        "type": "string",
                        "description": "The case title"
                    },
                    "aboutToExpireThresholdInDays": {
                        "type": "integer",
                        "description": "The threshold in days at which to notify that a task is about to expire",
                        "format": "int32"
                    },
                    "playbookName": {
                        "type": "string",
                        "description": "Playbook name"
                    },
                    "comments": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "List of Comments related to a task",
                        "items": {
                            "$ref": "#/components/schemas/TaskCommentInfo"
                        }
                    },
                    "unreadCommentsByCustomer": {
                        "type": "integer",
                        "description": "Number of unread comments by customer",
                        "format": "int32"
                    },
                    "unreadCommentsByTelus": {
                        "type": "integer",
                        "description": "Number of unread comments by TELUS",
                        "format": "int32"
                    },
                    "modifiedByTelus": {
                        "type": "boolean",
                        "description": "Should customer be notified when TELUS updates task"
                    },
                    "resolvedAt": {
                        "type": "string",
                        "description": "Resolution time of the task",
                        "format": "date-time"
                    },
                    "resolvedBy": {
                        "type": "string",
                        "description": "User who resolved the task"
                    }
                },
                "description": "A task"
            },
            "TaskCommentCreation": {
                "type": "object",
                "properties": {
                    "taskId": {
                        "type": "integer",
                        "description": "The identifiant of the related task",
                        "format": "int32",
                        "example": 121
                    },
                    "commentTextHtml": {
                        "type": "string",
                        "description": "The text of the comment",
                        "example": "<p>This is a comment</p>"
                    },
                    "authorship": {
                        "type": "string",
                        "description": "The Telus user accountable for the task",
                        "example": "TELUS"
                    }
                },
                "description": "A task comment creation"
            },
            "ActivatePlaybookRequest": {
                "type": "object",
                "properties": {
                    "caseId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "playbookId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "excludedTaskIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "PlaybookCreation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the playbook",
                        "example": "Playbook name"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the playbook",
                        "example": "Playbook description"
                    }
                },
                "description": "A playbook creation"
            },
            "PlaybookInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The identifiant",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The principal who created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last modification time",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The principal who last modifed"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the playbook",
                        "example": "Playbook name"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the playbook",
                        "example": "Playbook description"
                    },
                    "playbookTasks": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "List of tasks related to a playbook",
                        "items": {
                            "$ref": "#/components/schemas/PlaybookTaskInfo"
                        }
                    }
                },
                "description": "A playbook"
            },
            "PlaybookTaskInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The identifiant",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The principal who created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last modification time",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The principal who last modifed"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the playbook task",
                        "example": "Playbook task name"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the playbook task",
                        "example": "Playbook task description"
                    },
                    "accountable": {
                        "type": "string",
                        "description": "The type of user accountable for the playbook task",
                        "example": "CUSTOMER",
                        "enum": [
                            "TELUS",
                            "CUSTOMER"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the playbook task",
                        "example": "CRITICAL"
                    },
                    "phase": {
                        "type": "string",
                        "description": "The phase of the playbook task",
                        "example": "INVESTIGATION",
                        "enum": [
                            "INVESTIGATE",
                            "CONTAIN",
                            "ERADICATE",
                            "LESSONS_LEARNED"
                        ]
                    },
                    "dueDatePeriod": {
                        "type": "integer",
                        "description": "The due date of the playbook task in days",
                        "format": "int32"
                    }
                },
                "description": "A playbook task info"
            },
            "PlaybookTaskCreation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the playbook task",
                        "example": "Playbook task name"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the playbook task",
                        "example": "Playbook task description"
                    },
                    "accountable": {
                        "type": "string",
                        "description": "The type of user accountable for the playbook task",
                        "example": "CUSTOMER",
                        "enum": [
                            "TELUS",
                            "CUSTOMER"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the playbook task",
                        "example": "HIGH"
                    },
                    "phase": {
                        "type": "string",
                        "description": "The phase of the playbook task",
                        "example": "INVESTIGATION",
                        "enum": [
                            "INVESTIGATE",
                            "CONTAIN",
                            "ERADICATE",
                            "LESSONS_LEARNED"
                        ]
                    },
                    "dueDatePeriod": {
                        "type": "integer",
                        "description": "The due date of the playbook task in days",
                        "format": "int32"
                    }
                },
                "description": "A playbook task creation"
            },
            "IdentityCreation": {
                "required": [
                    "id",
                    "key"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identity ID"
                    },
                    "key": {
                        "type": "string",
                        "description": "The identity key"
                    },
                    "grantedBehalfUserPattern": {
                        "type": "string",
                        "description": "The user pattern the identity can act on behalf of",
                        "example": "https://mssportal.telus.com/api/users/.*"
                    },
                    "rateLimitConfiguration": {
                        "type": "string",
                        "description": "The rate limit configuration (capacity, refill, refill period)",
                        "example": "120,60,PT1M"
                    },
                    "permissions": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The identity permissions",
                        "items": {
                            "type": "string",
                            "description": "The identity permissions"
                        }
                    }
                },
                "description": "An identity creation"
            },
            "IdentityInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identity ID"
                    },
                    "grantedBehalfUserPattern": {
                        "type": "string",
                        "description": "The user pattern the identity can act on behalf of",
                        "example": "https://mssportal.telus.com/api/users/.*"
                    },
                    "rateLimitConfiguration": {
                        "type": "string",
                        "description": "The rate limit configuration (capacity, refill, refill period)",
                        "example": "120,60,PT1M"
                    },
                    "permissions": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The identity permissions",
                        "items": {
                            "type": "string",
                            "description": "The identity permissions"
                        }
                    }
                },
                "description": "An identity"
            },
            "CustomerCreation": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The customer ID",
                        "format": "int32"
                    },
                    "caseRetentionPeriodMonths": {
                        "type": "integer",
                        "description": "The case retention period (in months)",
                        "format": "int32"
                    }
                },
                "description": "A customer creation"
            },
            "CustomerInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The customer ID",
                        "format": "int32"
                    },
                    "caseRetentionPeriodMonths": {
                        "type": "integer",
                        "description": "The case retention period (in months)",
                        "format": "int32"
                    }
                },
                "description": "A customer"
            },
            "CaseCreation": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the case",
                        "example": "PENDING"
                    },
                    "telusPrime": {
                        "type": "string",
                        "description": "The Telus user accountable for the case",
                        "example": "https://mssportal.telus.com/api/users/1"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the case",
                        "example": "This is a case description"
                    },
                    "caseTitle": {
                        "type": "string",
                        "description": "The caseTitle of the case",
                        "example": "This is a case title"
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the case",
                        "example": "HIGH"
                    },
                    "resolutionNotes": {
                        "type": "string",
                        "description": "The resolution notes of the case",
                        "example": "This is a resolution notes"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "The identifiant of the related customer",
                        "format": "int32",
                        "example": 1
                    },
                    "caseSource": {
                        "type": "string",
                        "description": "Indicate if is a Cortex case or created manually",
                        "example": "MANUAL"
                    },
                    "alertName": {
                        "type": "string",
                        "description": "Incident Description for Cortex created cases and Alert Name for manually created cases",
                        "example": "Manual alert"
                    },
                    "serviceComponent": {
                        "type": "string",
                        "description": "The component of service for the case",
                        "example": "SOC"
                    }
                },
                "description": "A case creation"
            },
            "CaseInfo": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the case",
                        "example": "PENDING"
                    },
                    "telusPrime": {
                        "type": "string",
                        "description": "The Telus user accountable for the case",
                        "example": "https://mssportal.telus.com/api/users/1"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the case",
                        "example": "This is a case description"
                    },
                    "caseTitle": {
                        "type": "string",
                        "description": "The caseTitle of the case",
                        "example": "This is a case title"
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the case",
                        "example": "HIGH"
                    },
                    "resolutionNotes": {
                        "type": "string",
                        "description": "resolution notes"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "The identifiant of the related customer",
                        "format": "int32",
                        "example": 1
                    },
                    "caseSource": {
                        "type": "string",
                        "description": "Indicate if is a Cortex case or created manually",
                        "example": "MANUAL"
                    },
                    "alertName": {
                        "type": "string",
                        "description": "Incident Description for Cortex created cases and Alert Name for manually created cases",
                        "example": "Manual alert"
                    },
                    "id": {
                        "type": "integer",
                        "description": "The identifiant of the case",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the case",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The case creator"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last modification time of the case",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last case updator"
                    },
                    "serviceComponent": {
                        "type": "string",
                        "description": "The component of service for the case",
                        "example": "SOC"
                    },
                    "incident": {
                        "type": "boolean",
                        "description": "Indicates if the case has an incident",
                        "example": true
                    },
                    "incidentTime": {
                        "type": "string",
                        "description": "The incident time of the case",
                        "format": "date-time"
                    },
                    "incidentBy": {
                        "type": "string",
                        "description": "The user who set the case as incident"
                    },
                    "nbTelusPendingTasks": {
                        "type": "integer",
                        "description": "Number of pending tasks accountable for TELUS",
                        "format": "int32"
                    },
                    "nbTelusUnreadTaskComments": {
                        "type": "integer",
                        "description": "Number of task comments unread by TELUS",
                        "format": "int32"
                    },
                    "nbCustomerClosedTasks": {
                        "type": "integer",
                        "description": "Number of closed tasks accountable for Customer",
                        "format": "int32"
                    },
                    "nbCustomerTasks": {
                        "type": "integer",
                        "description": "Number of tasks accountable for Customer",
                        "format": "int32"
                    },
                    "resolvedAt": {
                        "type": "string",
                        "description": "Resolution time of the task",
                        "format": "date-time"
                    },
                    "resolvedBy": {
                        "type": "string",
                        "description": "User who resolved the task"
                    },
                    "sourceCreatedAt": {
                        "type": "string",
                        "description": "The creation time from the source (optional)",
                        "format": "date-time"
                    },
                    "firstAcknowledgmentAt": {
                        "type": "string",
                        "description": "The time of the first acknowledgement (optional)",
                        "format": "date-time"
                    },
                    "firstAssignmentAt": {
                        "type": "string",
                        "description": "The time of the first assignment (optional)",
                        "format": "date-time"
                    },
                    "firstResolutionAt": {
                        "type": "string",
                        "description": "The first resolution time",
                        "format": "date-time"
                    },
                    "firstCustomerTaskCreatedAt": {
                        "type": "string",
                        "description": "The time the first customer task was created (optional)",
                        "format": "date-time"
                    },
                    "firstTelusTaskResolvedAt": {
                        "type": "string",
                        "description": "The time the first TELUS task was resolved (optional)",
                        "format": "date-time"
                    },
                    "firstCustomerIncidentTaskCreatedAt": {
                        "type": "string",
                        "description": "The time the first customer task was created after promoting as incident (optional)",
                        "format": "date-time"
                    },
                    "firstTelusIncidentTaskResolvedAt": {
                        "type": "string",
                        "description": "The time the first TELUS task was resolved after promoting as incident (optional)",
                        "format": "date-time"
                    }
                },
                "description": "A case"
            },
            "CaseCommentCreation": {
                "type": "object",
                "properties": {
                    "commentTextHtml": {
                        "type": "string",
                        "description": "The text of the comment",
                        "example": "<p>This is a comment</p>"
                    }
                },
                "description": "A comment creation"
            },
            "AlertCreation": {
                "required": [
                    "customerId",
                    "name",
                    "severity",
                    "sourceAlertId",
                    "sourceCreatedAt",
                    "sourceId",
                    "sourceModifiedAt"
                ],
                "type": "object",
                "properties": {
                    "sourceId": {
                        "type": "string",
                        "description": "The identifier of the source system",
                        "example": "Cortex XDR"
                    },
                    "sourceCreatedAt": {
                        "type": "string",
                        "description": "The creation timestamp of the alert in the source system",
                        "format": "date-time"
                    },
                    "sourceModifiedAt": {
                        "type": "string",
                        "description": "The modification timestamp of the alert in the source system",
                        "format": "date-time"
                    },
                    "sourceAlertId": {
                        "type": "string",
                        "description": "The ID of the alert in the source system",
                        "example": "123"
                    },
                    "sourceRaw": {
                        "type": "string",
                        "description": "The raw data of the alert in the source system"
                    },
                    "severity": {
                        "type": "string",
                        "description": "The severity of the alert",
                        "example": "HIGH"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "The ID of the related customer",
                        "format": "int32"
                    },
                    "investigationCaseId": {
                        "type": "integer",
                        "description": "The ID of the related case",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the alert"
                    },
                    "caseDescription": {
                        "type": "string",
                        "description": "The description of the new investigation case"
                    },
                    "caseTitle": {
                        "type": "string",
                        "description": "The title of the new investigation case"
                    },
                    "detailHtml": {
                        "type": "string",
                        "description": "The HTML representation of the alert"
                    },
                    "providerId": {
                        "type": "string",
                        "writeOnly": true,
                        "deprecated": true
                    },
                    "providerCreatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "writeOnly": true,
                        "deprecated": true
                    },
                    "providerModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "writeOnly": true,
                        "deprecated": true
                    },
                    "providerAlertId": {
                        "type": "string",
                        "writeOnly": true,
                        "deprecated": true
                    },
                    "providerRaw": {
                        "type": "string",
                        "writeOnly": true,
                        "deprecated": true
                    }
                },
                "description": "An alert creation"
            },
            "AlertInfo": {
                "required": [
                    "customerId",
                    "sourceAlertId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the alert",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the alert",
                        "format": "date-time"
                    },
                    "sourceId": {
                        "type": "string",
                        "description": "The identifier of the source system",
                        "example": "Cortex XDR"
                    },
                    "sourceCreatedAt": {
                        "type": "string",
                        "description": "The creation timestamp of the alert in the source system",
                        "format": "date-time"
                    },
                    "sourceModifiedAt": {
                        "type": "string",
                        "description": "The modification timestamp of the alert in the source system",
                        "format": "date-time"
                    },
                    "sourceAlertId": {
                        "type": "string",
                        "description": "The ID of the alert in the source system",
                        "example": "123"
                    },
                    "sourceRaw": {
                        "type": "string",
                        "description": "The raw data of the alert in the source system"
                    },
                    "severity": {
                        "type": "string",
                        "description": "The severity of the alert",
                        "example": "HIGH"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "The ID of the related customer",
                        "format": "int32"
                    },
                    "investigationCaseId": {
                        "type": "integer",
                        "description": "The ID of the related case",
                        "format": "int32"
                    },
                    "acknowledgedBy": {
                        "type": "string",
                        "description": "The identity who acknowledged the alert"
                    },
                    "acknowledgedAt": {
                        "type": "string",
                        "description": "The moment when the alert was acknowledged",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the alert"
                    },
                    "detailHtml": {
                        "type": "string",
                        "description": "The HTML representation of the alert"
                    },
                    "providerId": {
                        "type": "string",
                        "deprecated": true
                    },
                    "providerCreatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "deprecated": true
                    },
                    "providerModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "deprecated": true
                    },
                    "providerAlertId": {
                        "type": "string",
                        "deprecated": true
                    },
                    "providerRaw": {
                        "type": "string",
                        "deprecated": true
                    }
                },
                "description": "An alert"
            },
            "PageThreatInfo": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThreatInfo"
                        }
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageableObject": {
                "type": "object",
                "properties": {
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paged": {
                        "type": "boolean"
                    },
                    "unpaged": {
                        "type": "boolean"
                    }
                }
            },
            "SortObject": {
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    },
                    "sorted": {
                        "type": "boolean"
                    },
                    "unsorted": {
                        "type": "boolean"
                    }
                }
            },
            "BaseAttachmentInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The identifiant",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The principal who created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last modification time",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The principal who last modifed"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "The identifiant of the related customer",
                        "format": "int32",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the attachment"
                    },
                    "dataSize": {
                        "type": "integer",
                        "description": "The size of the attachment",
                        "format": "int64"
                    }
                },
                "description": "Basic attachment info"
            },
            "PageTaskInfo": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskInfo"
                        }
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PagePlaybookInfo": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaybookInfo"
                        }
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "InstantFilterCriteria": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "to": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PlaybookTaskCriteria": {
                "type": "object",
                "properties": {
                    "sort": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/InstantFilterCriteria"
                    },
                    "updatedAt": {
                        "$ref": "#/components/schemas/InstantFilterCriteria"
                    },
                    "playbookId": {
                        "type": "string"
                    },
                    "searchText": {
                        "type": "string"
                    }
                }
            },
            "PagePlaybookTaskInfo": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlaybookTaskInfo"
                        }
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageCaseInfo": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CaseInfo"
                        }
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "LinkedCase": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The identifiant of the case",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the case",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The case creator"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last modification time of the case",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last case updator"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the case",
                        "example": "AbnormalInboundVolume"
                    },
                    "caseTitle": {
                        "type": "string",
                        "description": "The title of the case",
                        "example": "case title1"
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the case",
                        "example": "HIGH"
                    },
                    "serviceComponent": {
                        "type": "string",
                        "description": "The component of service for the case",
                        "example": "SOC"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the case",
                        "example": "PENDING"
                    },
                    "incident": {
                        "type": "boolean",
                        "description": "Indicates if the case has an incident",
                        "example": true
                    },
                    "incidentTime": {
                        "type": "string",
                        "description": "The incident time of the case",
                        "format": "date-time"
                    }
                },
                "description": "A linked case"
            },
            "CaseCriteria": {
                "type": "object",
                "properties": {
                    "sort": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "serviceComponent": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priority": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "telusPrime": {
                        "type": "string"
                    },
                    "incident": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/InstantFilterCriteria"
                    },
                    "customerId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "alertId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "caseSource": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "searchText": {
                        "type": "string"
                    },
                    "resolvedAt": {
                        "$ref": "#/components/schemas/InstantFilterCriteria"
                    },
                    "resolvedBy": {
                        "type": "string"
                    },
                    "threatId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "serviceComponents": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SOC",
                                "THREAT_HUNTING"
                            ]
                        }
                    },
                    "caseSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "IN_PROGRESS",
                                "CLOSED"
                            ]
                        }
                    },
                    "priorities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "CRITICAL",
                                "HIGH",
                                "MEDIUM",
                                "LOW",
                                "VERY_LOW"
                            ]
                        }
                    }
                }
            },
            "CaseServiceMetric": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "Count",
                        "format": "int64"
                    },
                    "min": {
                        "type": "integer",
                        "description": "Minimum",
                        "format": "int64"
                    },
                    "avg": {
                        "type": "number",
                        "description": "Average",
                        "format": "double"
                    },
                    "max": {
                        "type": "integer",
                        "description": "Maximum",
                        "format": "int64"
                    }
                }
            },
            "CaseServiceMetrics": {
                "type": "object",
                "properties": {
                    "timeToAcknowledge": {
                        "$ref": "#/components/schemas/CaseServiceMetric"
                    },
                    "timeToDetect": {
                        "$ref": "#/components/schemas/CaseServiceMetric"
                    },
                    "timeToRespond": {
                        "$ref": "#/components/schemas/CaseServiceMetric"
                    }
                }
            },
            "PageAlertInfo": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlertInfo"
                        }
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            }
        },
        "securitySchemes": {
            "X-Lestrade-Key-ID": {
                "type": "apiKey",
                "name": "X-Lestrade-Key-ID",
                "in": "header"
            },
            "X-Lestrade-Key": {
                "type": "apiKey",
                "name": "X-Lestrade-Key",
                "in": "header"
            }
        }
    }
}